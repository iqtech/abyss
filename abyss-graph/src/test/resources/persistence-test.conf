# In this file you can override any option defined in the reference files.
# Copy in parts of the reference files and modify as you please.

akka {

  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.Logging$DefaultLogger"]

  # loglevel - Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # stdout-loglevel - Log level for the very basic logger activated during AkkaApplication startup
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"



  # On to see Akka configuration on startup.
  log-config-on-start = off

}

abyss.data {
    # Below are setting which configures persistence layer for Abyss
    persistence {
        writeBehind = false
        writeBehindInterval = 500

        provider = "cassandra"

        # will produce actor /user/node/persistence/cassandra
        cassandra {
            keySpace = "abyss"
            replicationFactor = 1
            nodes = [ "localhost:9160" ]
        }

    }

    # move to data.conf
    consistency = {
        # Values will be applied as defaults to collections with no 'cr' or 'cw' specified.
        read = "One"
        write = "All"

        # Attributes cr and cw may be specified for every collection, available values (see AbyssConsistencyLevel):
        # Any, One, Two, Three, LocalQuorum, EachQuorum, Quorum, All. These values mirrors Cassandra's defined
        # consistency level and are also used, after translation, in Cassandra persistence layer.
        collections = [

            # Vertices
            {name = "Galaxy", cr = "One", cw = "All"}
            {name = "Star"}
            {name = "Planet"}
            {name = "Moon"}
            {name = "Satellite"}
            {name = "Region"}

            # Edges
            {name = "Orbits"}
            {name = "MemberOf"}
        ]
    }

}
